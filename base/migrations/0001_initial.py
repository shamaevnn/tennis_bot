# Generated by Django 2.0.5 on 2020-07-14 12:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0009_alter_user_last_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                (
                    "telegram_username",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "first_name",
                    models.CharField(max_length=32, null=True, verbose_name="Имя"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=16, null=True, verbose_name="Номер телефона"
                    ),
                ),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_blocked", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("W", "в ожидании"),
                            ("G", "групповые тренировки"),
                            ("A", "свободный график"),
                            ("F", "закончил"),
                        ],
                        default="W",
                        max_length=1,
                        verbose_name="статус",
                    ),
                ),
                (
                    "time_before_cancel",
                    models.DurationField(
                        default="6:0:0",
                        help_text="ЧАСЫ:МИНУТЫ:СЕКУНДЫ",
                        null=True,
                        verbose_name="Время, за которое нужно предупредить",
                    ),
                ),
                (
                    "bonus_lesson",
                    models.SmallIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Количество отыгрышей",
                    ),
                ),
                (
                    "add_info",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Доп. информация",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Родитель",
                    ),
                ),
            ],
            options={
                "verbose_name": "игрок",
                "verbose_name_plural": "игроки",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="GroupTrainingDay",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Дата Занятия"
                    ),
                ),
                (
                    "is_individual",
                    models.BooleanField(
                        default=False, help_text="индивидуальная ли тренировка"
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        help_text="ЧАСЫ:МИНУТЫ:СЕКУНДЫ",
                        null=True,
                        verbose_name="Время начала занятия",
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        default="1:0:0",
                        help_text="ЧАСЫ:МИНУТЫ:СЕКУНДЫ",
                        null=True,
                        verbose_name="Продолжительность занятия",
                    ),
                ),
                (
                    "absent",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Кто сегодня отсутствует",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Отсутствующие",
                    ),
                ),
                (
                    "visitors",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Пришли из других групп\n",
                        related_name="visitors",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Игроки из других групп",
                    ),
                ),
                ("dttm_added", models.DateTimeField(default=django.utils.timezone.now)),
                ("dttm_deleted", models.DateTimeField(blank=True, null=True)),
                (
                    "tr_day_status",
                    models.CharField(
                        choices=[("M", "моя тренировка"), ("R", "аренда")],
                        default="M",
                        help_text="Моя тренировка или аренда",
                        max_length=1,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "pay_visitors",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Заплатили за занятие",
                        related_name="pay_visitors",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Заплатившие игроки",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "verbose_name": "тренировочный день",
                "verbose_name_plural": "тренировочные дни",
            },
        ),
        migrations.CreateModel(
            name="TrainingGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dttm_added", models.DateTimeField(default=django.utils.timezone.now)),
                ("dttm_deleted", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=32, verbose_name="Название")),
                (
                    "max_players",
                    models.SmallIntegerField(
                        default=6,
                        verbose_name="Максимальное количество игроков в группе",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("I", "для индивидуальных тренировок"),
                            ("G", "взрослые групповые тренировки"),
                            ("F", "детская группа малой численности"),
                            ("S", "детская секция"),
                        ],
                        default="G",
                        max_length=1,
                        verbose_name="Статус группы",
                    ),
                ),
                ("users", models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("G", "🍏зелёный мяч🍏"),
                            ("O", "\U0001f9e1оранжевый мяч\U0001f9e1"),
                        ],
                        default="O",
                        max_length=1,
                        verbose_name="Уровень группы",
                    ),
                ),
                (
                    "tarif_for_one_lesson",
                    models.PositiveIntegerField(
                        default=400, verbose_name="Тариф за одно занятие"
                    ),
                ),
                (
                    "available_for_additional_lessons",
                    models.BooleanField(
                        default=False,
                        help_text="Можно ли прийти в эту группу на занятия за деньги,если меньше, чем max_players",
                        verbose_name="Занятия за деньги",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "verbose_name": "банда",
                "verbose_name_plural": "банды",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "month",
                    models.CharField(
                        choices=[
                            ("1", "январь"),
                            ("2", "февраль"),
                            ("3", "март"),
                            ("4", "апрель"),
                            ("5", "май"),
                            ("6", "июнь"),
                            ("7", "июль"),
                            ("8", "август"),
                            ("9", "сентябрь"),
                            ("10", "октябрь"),
                            ("11", "ноябрь"),
                            ("12", "декабрь"),
                        ],
                        max_length=2,
                        verbose_name="месяц",
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        choices=[("0", "2020"), ("1", "2021")],
                        max_length=1,
                        verbose_name="год",
                    ),
                ),
                (
                    "fact_amount",
                    models.PositiveIntegerField(
                        default=0, null=True, verbose_name="Сколько заплатил"
                    ),
                ),
                (
                    "n_fact_visiting",
                    models.PositiveSmallIntegerField(
                        default=0, null=True, verbose_name="Кол-во посещенных занятий"
                    ),
                ),
                (
                    "theory_amount",
                    models.PositiveIntegerField(
                        default=0,
                        null=True,
                        verbose_name="Сколько должен был заплатить",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="игрок",
                    ),
                ),
            ],
            options={
                "ordering": ["year"],
                "verbose_name": "оплата",
                "verbose_name_plural": "оплата",
            },
        ),
        migrations.CreateModel(
            name="AlertsLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_sent", models.BooleanField(default=False)),
                ("dttm_sent", models.DateTimeField(auto_now_add=True)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("CT", "предстоящая тренировка"),
                            ("CM", "сообщение от тренера"),
                            ("SP", "нужно заплатить за месяц"),
                        ],
                        default="CT",
                        max_length=2,
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tr_day",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.GroupTrainingDay",
                    ),
                ),
                ("info", models.TextField(null=True)),
                (
                    "payment",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.Payment",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="grouptrainingday",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="base.TrainingGroup",
                verbose_name="Группа",
            ),
        ),
    ]
