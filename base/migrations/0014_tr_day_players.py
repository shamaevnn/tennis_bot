# Generated by Django 3.2.4 on 2021-11-15 22:02

from django.db import migrations, models


def insert_absent_players_from_users(apps, schema_editor):
    Player = apps.get_model("base", "Player")
    GroupTrainingDay = apps.get_model("base", "GroupTrainingDay")

    for tr_day in GroupTrainingDay.objects.all().iterator():
        users_tg_ids = list(tr_day.absent.all().values_list("id", flat=True))
        players = Player.objects.filter(tg_id__in=users_tg_ids)
        tr_day.players_absent.add(*players)


def insert_visitor_players_from_users(apps, schema_editor):
    Player = apps.get_model("base", "Player")
    GroupTrainingDay = apps.get_model("base", "GroupTrainingDay")

    for tr_day in GroupTrainingDay.objects.all().iterator():
        users_tg_ids = list(tr_day.visitors.all().values_list("id", flat=True))
        players = Player.objects.filter(tg_id__in=users_tg_ids)
        tr_day.players_visitors.add(*players)


def insert_pay_visitors_players_from_users(apps, schema_editor):
    Player = apps.get_model("base", "Player")
    GroupTrainingDay = apps.get_model("base", "GroupTrainingDay")

    for tr_day in GroupTrainingDay.objects.all().iterator():
        users_tg_ids = list(tr_day.pay_visitors.all().values_list("id", flat=True))
        players = Player.objects.filter(tg_id__in=users_tg_ids)
        tr_day.players_pay_visitors.add(*players)


def insert_pay_bonus_visitor_players_from_users(apps, schema_editor):
    Player = apps.get_model("base", "Player")
    GroupTrainingDay = apps.get_model("base", "GroupTrainingDay")

    for tr_day in GroupTrainingDay.objects.all().iterator():
        users_tg_ids = list(
            tr_day.pay_bonus_visitors.all().values_list("id", flat=True)
        )
        players = Player.objects.filter(tg_id__in=users_tg_ids)
        tr_day.players_pay_bonus_visitors.add(*players)


def insert_data_from_users_to_players(apps, schema_editor):
    insert_absent_players_from_users(apps, schema_editor)
    insert_visitor_players_from_users(apps, schema_editor)
    insert_pay_visitors_players_from_users(apps, schema_editor)
    insert_pay_bonus_visitor_players_from_users(apps, schema_editor)


class Migration(migrations.Migration):

    dependencies = [
        ("base", "0013_payment_player_tmp"),
    ]

    operations = [
        migrations.AddField(
            model_name="grouptrainingday",
            name="players_absent",
            field=models.ManyToManyField(
                blank=True,
                help_text="Кто сегодня отсутствует",
                to="base.Player",
                verbose_name="Отсутствующие",
            ),
        ),
        migrations.AddField(
            model_name="grouptrainingday",
            name="players_pay_bonus_visitors",
            field=models.ManyToManyField(
                blank=True,
                help_text="Платный отыгрыш",
                related_name="pay_bonus_visitors",
                to="base.Player",
                verbose_name="Заплатили ₽ + отыгрыш",
            ),
        ),
        migrations.AddField(
            model_name="grouptrainingday",
            name="players_pay_visitors",
            field=models.ManyToManyField(
                blank=True,
                help_text="Заплатили за занятие",
                related_name="pay_visitors",
                to="base.Player",
                verbose_name="Заплатившие игроки",
            ),
        ),
        migrations.AddField(
            model_name="grouptrainingday",
            name="players_visitors",
            field=models.ManyToManyField(
                blank=True,
                help_text="Пришли из других групп\n",
                related_name="visitors",
                to="base.Player",
                verbose_name="Игроки из других групп",
            ),
        ),
        migrations.RunPython(insert_data_from_users_to_players),
    ]
